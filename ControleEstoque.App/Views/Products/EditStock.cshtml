@model ControleEstoque.App.Models.Product

@{
    ViewData["Title"] = "Movimentar Estoque";
}

<h3>@ViewData["Title"]</h3>
<hr />

<div class="row">
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.BarCode)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.BarCode)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Stock)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Stock)
        </dd>
    </dl>
    <div class="col-md-4">
        <form asp-action="EditStock">
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="Stock" value="Quantidade a Movimentar:" class="control-label"></label>
                        <input asp-for="Stock" value="0" class="form-control" />
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label>Tipo Lançamento:</label>
                        <select class="form-control" name="tpLancto" id="tpLancto">
                            <option value="1">ENTRADA</option>
                            <option value="2" selected="">SAÍDA</option>
                        </select>
                    </div>
                </div>
                <div class="form-group">
                    <input type="submit" value="Salvar" class="btn btn-success" />
                    <a asp-action="Details" class="btn btn-default">Cancelar</a>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
